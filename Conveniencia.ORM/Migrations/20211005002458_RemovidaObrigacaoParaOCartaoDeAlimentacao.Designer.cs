// <auto-generated />
using System;
using Conveniencia.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Conveniencia.ORM.Migrations
{
    [DbContext(typeof(ConvenienciaDbContext))]
    [Migration("20211005002458_RemovidaObrigacaoParaOCartaoDeAlimentacao")]
    partial class RemovidaObrigacaoParaOCartaoDeAlimentacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Conveniencia.Dominio.ClienteModule.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CartaoAlimentacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("LimiteCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("SaldoDevedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TBCliente");
                });

            modelBuilder.Entity("Conveniencia.Dominio.ProdutoMarcadoModule.ProdutoMarcado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataMarcada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2021, 10, 4, 21, 24, 57, 951, DateTimeKind.Local).AddTicks(21));

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("TBProdutoMarcado");
                });

            modelBuilder.Entity("Conveniencia.Dominio.ProdutoModule.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estoque")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PrecoCompra")
                        .HasColumnType("REAL");

                    b.Property<double>("PrecoVenda")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("TBProduto");
                });

            modelBuilder.Entity("Conveniencia.Dominio.ProdutoMarcadoModule.ProdutoMarcado", b =>
                {
                    b.HasOne("Conveniencia.Dominio.ClienteModule.Cliente", "Cliente")
                        .WithMany("ProdutosMarcados")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Conveniencia.Dominio.ProdutoModule.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Conveniencia.Dominio.ClienteModule.Cliente", b =>
                {
                    b.Navigation("ProdutosMarcados");
                });
#pragma warning restore 612, 618
        }
    }
}
